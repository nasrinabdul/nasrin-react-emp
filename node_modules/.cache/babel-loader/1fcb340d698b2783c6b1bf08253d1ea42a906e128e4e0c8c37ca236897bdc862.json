{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nasri\\\\projectfiles\\\\emp-react-project\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\n//import { App } from './test.js'\n\n//import { isEmpty, isValidEmail } from './someValidators';\n\n/*function EmpId() {\n    const[empId, showEmpId] = useState(\"\");\n    return <h2>Employee Id : {empId} </h2>\n}\n\nfunction EmpName() {\n    const[empName, setEmpName] = useState(\"\");\n    return (\n        <>\n        <h2>Employee Name : </h2>\n        <input type=\"text\" value={empName} onChange={(e) => setEmpName(e.target.value)} />\n        </>\n    );\n}\n\nfunction DateOfBirth() {\n    const[dob, setDob] = useState(\"\");\n    return (\n        <>\n        <h2>Date of Birth : </h2>\n        <input type=\"date\" value={dob} onChange={(e) => setDob(e.target.value)} />\n        </>\n    );\n}\n\nfunction EmailId() {\n    const[emailId, setEmailId] = useState(\"\");\n    return (\n        <>\n        <h2>Email Id : </h2>\n        <input type=\"text\" value={emailId} onChange={(e) => setEmailId(e.target.value)} />\n        </>\n    );\n}*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeForm = () => {\n  _s();\n  /*empEntry = {\n      empName : String,\n      emailId : String,\n      dob : Date,\n      joinDate : Date\n  };*/\n  const {\n    empEntry,\n    handleSubmit\n  } = useForm({\n    shouldUseNativeValidation: true\n  });\n\n  /*useEffect(() => {\n  reset({\n      empName : \"\",\n      emailId : \"\",\n      dob : \"//\",\n      joinDate : \"//\"61\n  });\n  }, {});*/\n  const handleEntry = data => console.log(data);\n  // const handleError = (errors) => {};\n\n  const errorMsg = {\n    empName: {\n      required: \"Employee Name is required\"\n    },\n    emailId: {\n      required: \"Email Id is required\"\n    },\n    dob: {\n      required: \"Date of Birth is mandatory\"\n    },\n    joinDate: {\n      required: \"Joining Date is mandatory\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(handleEntry /*, handleError*/),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Employee Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"empName\",\n        type: \"text\",\n        ...empEntry(\"empName\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Employee EmailId\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"emailId\",\n        type: \"text\",\n        ...empEntry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Employee Date Of Birth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 54\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"dob\",\n        type: \"date\",\n        ...empEntry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Employee Joining Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 49\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"joinDate\",\n        type: \"date\",\n        ...empEntry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 8\n  }, this);\n};\n\n/*function JoiningDate() {\n    const[joiningDate, setJoiningDate] = useState(\"\");\n    return (\n        <>\n        <h2>Joining Date : </h2>\n        <input type=\"date\" value={joiningDate} onChange={(e) => setJoiningDate(e.target.value)} />\n        </>\n    );\n}*/\n_s(EmployeeForm, \"LQ9USYB0QXRCt6JU/r5QzafcD/M=\", false, function () {\n  return [useForm];\n});\n_c = EmployeeForm;\nconst myFirstElement = /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: \"Hello React from Nasrin\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 116,\n  columnNumber: 24\n}, this);\n\n//const root = ReactDOM.createRoot(document.getElementById(\"root\"));\n//root.render(<EmployeeForm/>);\n//root.render(<App/>);\nvar _c;\n$RefreshReg$(_c, \"EmployeeForm\");","map":{"version":3,"names":["React","ReactDOM","useState","useEffect","useForm","jsxDEV","_jsxDEV","EmployeeForm","_s","empEntry","handleSubmit","shouldUseNativeValidation","handleEntry","data","console","log","errorMsg","empName","required","emailId","dob","joinDate","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","name","type","_c","myFirstElement","$RefreshReg$"],"sources":["C:/Users/nasri/projectfiles/emp-react-project/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\n//import { App } from './test.js'\n\n//import { isEmpty, isValidEmail } from './someValidators';\n\n\n/*function EmpId() {\n    const[empId, showEmpId] = useState(\"\");\n    return <h2>Employee Id : {empId} </h2>\n}\n\nfunction EmpName() {\n    const[empName, setEmpName] = useState(\"\");\n    return (\n        <>\n        <h2>Employee Name : </h2>\n        <input type=\"text\" value={empName} onChange={(e) => setEmpName(e.target.value)} />\n        </>\n    );\n}\n\nfunction DateOfBirth() {\n    const[dob, setDob] = useState(\"\");\n    return (\n        <>\n        <h2>Date of Birth : </h2>\n        <input type=\"date\" value={dob} onChange={(e) => setDob(e.target.value)} />\n        </>\n    );\n}\n\nfunction EmailId() {\n    const[emailId, setEmailId] = useState(\"\");\n    return (\n        <>\n        <h2>Email Id : </h2>\n        <input type=\"text\" value={emailId} onChange={(e) => setEmailId(e.target.value)} />\n        </>\n    );\n}*/\nconst EmployeeForm = () => {\n    /*empEntry = {\n        empName : String,\n        emailId : String,\n        dob : Date,\n        joinDate : Date\n    };*/\n    const { empEntry, handleSubmit } = useForm({\n            shouldUseNativeValidation : true\n    }\n    );\n\n    /*useEffect(() => {\n    reset({\n        empName : \"\",\n        emailId : \"\",\n        dob : \"//\",\n        joinDate : \"//\"61\n    });\n    }, {});*/\n    const handleEntry = (data) => console.log(data);\n   // const handleError = (errors) => {};\n\n    const errorMsg = {\n        empName : { required : \"Employee Name is required\"},\n        emailId : { required : \"Email Id is required\"},\n        dob : { required : \"Date of Birth is mandatory\"},\n        joinDate : { required : \"Joining Date is mandatory\"}\n    };\n\n    return(\n       <form onSubmit={handleSubmit(handleEntry/*, handleError*/)}>\n        <div>\n        <label>Employee Name</label><br/>\n        <input name=\"empName\" type=\"text\" {...empEntry(\"empName\")} />\n\n        </div>\n        <hr/>\n        <div>\n                <label>Employee EmailId</label><br/>\n        <input name=\"emailId\" type=\"text\" {...empEntry}/>\n\n        </div>\n        <hr/>\n        <div>\n                <label>Employee Date Of Birth</label><br/>\n                  <input name=\"dob\" type=\"date\" {...empEntry}/>\n\n        </div>\n        <hr/>\n        <div>\n            <label>Employee Joining Date</label><br/>\n            <input name=\"joinDate\" type=\"date\" {...empEntry}/>\n\n        </div>\n        <hr/>\n        <button type=\"submit\">Submit</button>\n       </form>\n\n    );\n}\n\n/*function JoiningDate() {\n    const[joiningDate, setJoiningDate] = useState(\"\");\n    return (\n        <>\n        <h2>Joining Date : </h2>\n        <input type=\"date\" value={joiningDate} onChange={(e) => setJoiningDate(e.target.value)} />\n        </>\n    );\n}*/\n\nconst myFirstElement = <h1>Hello React from Nasrin</h1>\n\n//const root = ReactDOM.createRoot(document.getElementById(\"root\"));\n//root.render(<EmployeeForm/>);\n//root.render(<App/>);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}