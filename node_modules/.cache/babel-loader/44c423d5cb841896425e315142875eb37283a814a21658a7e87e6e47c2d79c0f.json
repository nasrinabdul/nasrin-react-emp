{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nasri\\\\projectfiles\\\\emp-react-project\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { useState } from 'react';\n//import { Form } from 'react-hook-form';\n\n//import { isEmpty, isValidEmail } from './someValidators';\n\n/*function EmpId() {\n    const[empId, showEmpId] = useState(\"\");\n    return <h2>Employee Id : {empId} </h2>\n}\n\nfunction EmpName() {\n    const[empName, setEmpName] = useState(\"\");\n    return (\n        <>\n        <h2>Employee Name : </h2>\n        <input type=\"text\" value={empName} onChange={(e) => setEmpName(e.target.value)} />\n        </>\n    );\n}\n\nfunction DateOfBirth() {\n    const[dob, setDob] = useState(\"\");\n    return (\n        <>\n        <h2>Date of Birth : </h2>\n        <input type=\"date\" value={dob} onChange={(e) => setDob(e.target.value)} />\n        </>\n    );\n}\n\nfunction EmailId() {\n    const[emailId, setEmailId] = useState(\"\");\n    return (\n        <>\n        <h2>Email Id : </h2>\n        <input type=\"text\" value={emailId} onChange={(e) => setEmailId(e.target.value)} />\n        </>\n    );\n}*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EmployeeEntry() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      validate: validate,\n      children: [/*#__PURE__*/_jsxDEV(ValidationErrors, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"empName\",\n        type: \"text\",\n        value: empName,\n        onChange: e => e.target.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"emailId\",\n        type: \"text\",\n        value: emailId,\n        onChange: e => e.target.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"dob\",\n        type: \"date\",\n        value: dob,\n        onChange: e => e.target.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"joinDate\",\n        type: \"date\",\n        value: joinDate,\n        onChange: e => e.target.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n}\n\n/*function JoiningDate() {\n    const[joiningDate, setJoiningDate] = useState(\"\");\n    return (\n        <>\n        <h2>Joining Date : </h2>\n        <input type=\"date\" value={joiningDate} onChange={(e) => setJoiningDate(e.target.value)} />\n        </>\n    );\n}*/\n_c = EmployeeEntry;\nconst myFirstElement = /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: \"Hello React from Nasrin\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 70,\n  columnNumber: 24\n}, this);\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(myFirstElement);\nvar _c;\n$RefreshReg$(_c, \"EmployeeEntry\");","map":{"version":3,"names":["React","ReactDOM","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","EmployeeEntry","children","onSubmit","handleSubmit","validate","ValidationErrors","fileName","_jsxFileName","lineNumber","columnNumber","name","type","value","empName","onChange","e","target","emailId","dob","joinDate","_c","myFirstElement","root","createRoot","document","getElementById","render","$RefreshReg$"],"sources":["C:/Users/nasri/projectfiles/emp-react-project/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { useState } from 'react';\n//import { Form } from 'react-hook-form';\n\n//import { isEmpty, isValidEmail } from './someValidators';\n\n\n/*function EmpId() {\n    const[empId, showEmpId] = useState(\"\");\n    return <h2>Employee Id : {empId} </h2>\n}\n\nfunction EmpName() {\n    const[empName, setEmpName] = useState(\"\");\n    return (\n        <>\n        <h2>Employee Name : </h2>\n        <input type=\"text\" value={empName} onChange={(e) => setEmpName(e.target.value)} />\n        </>\n    );\n}\n\nfunction DateOfBirth() {\n    const[dob, setDob] = useState(\"\");\n    return (\n        <>\n        <h2>Date of Birth : </h2>\n        <input type=\"date\" value={dob} onChange={(e) => setDob(e.target.value)} />\n        </>\n    );\n}\n\nfunction EmailId() {\n    const[emailId, setEmailId] = useState(\"\");\n    return (\n        <>\n        <h2>Email Id : </h2>\n        <input type=\"text\" value={emailId} onChange={(e) => setEmailId(e.target.value)} />\n        </>\n    );\n}*/\n\nfunction EmployeeEntry() {\n    return(\n    <>\n       <form onSubmit={handleSubmit} validate={validate}>\n        <ValidationErrors/>\n        <input name=\"empName\" type=\"text\" value={empName} onChange={(e) => e.target.value}/>\n        <input name=\"emailId\" type=\"text\" value={emailId} onChange={(e) => e.target.value}/>\n        <input name=\"dob\" type=\"date\" value={dob} onChange={(e) => e.target.value}/>\n        <input name=\"joinDate\" type=\"date\" value={joinDate} onChange={(e) => e.target.value}/>\n        <button type=\"submit\">Submit</button>\n       </form>\n\n    </>\n    );\n}\n\n/*function JoiningDate() {\n    const[joiningDate, setJoiningDate] = useState(\"\");\n    return (\n        <>\n        <h2>Joining Date : </h2>\n        <input type=\"date\" value={joiningDate} onChange={(e) => setJoiningDate(e.target.value)} />\n        </>\n    );\n}*/\n\nconst myFirstElement = <h1>Hello React from Nasrin</h1>\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(myFirstElement);"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,QAAQ,QAAQ,OAAO;AAChC;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAmCA,SAASC,aAAaA,CAAA,EAAG;EACrB,oBACAH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACGJ,OAAA;MAAMK,QAAQ,EAAEC,YAAa;MAACC,QAAQ,EAAEA,QAAS;MAAAH,QAAA,gBAChDJ,OAAA,CAACQ,gBAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACnBZ,OAAA;QAAOa,IAAI,EAAC,SAAS;QAACC,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEC,OAAQ;QAACC,QAAQ,EAAGC,CAAC,IAAKA,CAAC,CAACC,MAAM,CAACJ;MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACpFZ,OAAA;QAAOa,IAAI,EAAC,SAAS;QAACC,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEK,OAAQ;QAACH,QAAQ,EAAGC,CAAC,IAAKA,CAAC,CAACC,MAAM,CAACJ;MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACpFZ,OAAA;QAAOa,IAAI,EAAC,KAAK;QAACC,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEM,GAAI;QAACJ,QAAQ,EAAGC,CAAC,IAAKA,CAAC,CAACC,MAAM,CAACJ;MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC5EZ,OAAA;QAAOa,IAAI,EAAC,UAAU;QAACC,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEO,QAAS;QAACL,QAAQ,EAAGC,CAAC,IAAKA,CAAC,CAACC,MAAM,CAACJ;MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACtFZ,OAAA;QAAQc,IAAI,EAAC,QAAQ;QAAAV,QAAA,EAAC;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC;EAAC,gBAER,CAAC;AAEP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARAW,EAAA,GAhBSpB,aAAa;AA0BtB,MAAMqB,cAAc,gBAAGxB,OAAA;EAAAI,QAAA,EAAI;AAAuB;EAAAK,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAI,CAAC;AAEvD,MAAMa,IAAI,GAAG5B,QAAQ,CAAC6B,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,CAACL,cAAc,CAAC;AAAC,IAAAD,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}