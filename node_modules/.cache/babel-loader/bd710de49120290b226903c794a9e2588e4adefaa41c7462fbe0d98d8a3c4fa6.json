{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nasri\\\\projectfiles\\\\emp-react-project\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App1() {\n  _s();\n  const {\n    register,\n    handleSubmit\n  } = useForm({\n    shouldUseNativeValidation: true\n  });\n  const onSubmit = async data => {\n    console.log(data);\n  };\n  const errorMsg = {\n    firstName: {\n      required: \"Please enter your FirstName\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit, handleError),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ...register(\"firstName\", errorMsg.firstName)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(App1, \"zkd3JmxRK/AmyiWtSfciHeYO5Zk=\", false, function () {\n  return [useForm];\n});\n_c = App1;\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n//root.render(<EmployeeForm/>);\nroot.render( /*#__PURE__*/_jsxDEV(App1, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"App1\");","map":{"version":3,"names":["React","ReactDOM","useState","useEffect","useForm","jsxDEV","_jsxDEV","App1","_s","register","handleSubmit","shouldUseNativeValidation","onSubmit","data","console","log","errorMsg","firstName","required","handleError","children","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","root","createRoot","document","getElementById","render","$RefreshReg$"],"sources":["C:/Users/nasri/projectfiles/emp-react-project/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\n\n\n function App1() {\n  const { register, handleSubmit } = useForm({ shouldUseNativeValidation: true });\n  const onSubmit = async  data => { console.log(data); };\n\n  const errorMsg = {\n    firstName : {required : \"Please enter your FirstName\"}\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit, handleError)}>\n      <input\n        {...register(\"firstName\", errorMsg.firstName)} // custom message\n      />\n      <input type=\"submit\" />\n    </form>\n  );\n}\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n//root.render(<EmployeeForm/>);\nroot.render(<App1/>);"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM;IAAEC,QAAQ;IAAEC;EAAa,CAAC,GAAGN,OAAO,CAAC;IAAEO,yBAAyB,EAAE;EAAK,CAAC,CAAC;EAC/E,MAAMC,QAAQ,GAAG,MAAOC,IAAI,IAAI;IAAEC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EAAE,CAAC;EAEtD,MAAMG,QAAQ,GAAG;IACfC,SAAS,EAAG;MAACC,QAAQ,EAAG;IAA6B;EACvD,CAAC;EAED,oBACEZ,OAAA;IAAMM,QAAQ,EAAEF,YAAY,CAACE,QAAQ,EAAEO,WAAW,CAAE;IAAAC,QAAA,gBAClDd,OAAA;MAAA,GACMG,QAAQ,CAAC,WAAW,EAAEO,QAAQ,CAACC,SAAS;IAAC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFlB,OAAA;MAAOmB,IAAI,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEX;AAAChB,EAAA,CAhBSD,IAAI;EAAA,QACuBH,OAAO;AAAA;AAAAsB,EAAA,GADlCnB,IAAI;AAiBd,MAAMoB,IAAI,GAAG1B,QAAQ,CAAC2B,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjE;AACAH,IAAI,CAACI,MAAM,eAACzB,OAAA,CAACC,IAAI;EAAAc,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAC,CAAC,CAAC;AAAC,IAAAE,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}